function  valid = contourOPCSummary(dataIn,nodeID,xLabel,yLabel,titleIn,figName)
% (dataX,dataY,nodeID,xLabel,yLabel,titleIn,givenDate,calibratedFolder,stringIn,autoScaleOn,limit)
%DRAWCONTOURPLOT Summary of this function goes here
%   Detailed explanation goes here
display("Plotting Graphs for " + titleIn)
if(height(dataIn)>1)
    
    if (sum(contains(dataIn.Properties.VariableNames,"OPCN2"))>0)
        contourOut = {...
            'OPCN2_binCount0Log'           ,...
            'OPCN2_binCount1Log'           ,...
            'OPCN2_binCount2Log'           ,...
            'OPCN2_binCount3Log'           ,...
            'OPCN2_binCount4Log'           ,...
            'OPCN2_binCount5Log'           ,...
            'OPCN2_binCount6Log'           ,...
            'OPCN2_binCount7Log'           ,...
            'OPCN2_binCount8Log'           ,...
            'OPCN2_binCount9Log'           ,...
            'OPCN2_binCount10Log'          ,...
            'OPCN2_binCount11Log'          ,...
            'OPCN2_binCount12Log'          ,...
            'OPCN2_binCount13Log'          ,...
            'OPCN2_binCount14Log'          ,...
            'OPCN2_binCount15Log'          ,...
            };
        
        binBoundriesHigh = [.54,.78,1,1.3,1.6,2.1,3.0,4.0,5.0,6.5,8,10,12,14,16,18];
        binBoundriesLow  = [0.38,.54,.78,1,1.3,1.6,2.1,3.0,4.0,5.0,6.5,8,10,12,14,16];
        
        
    elseif ((sum(contains(dataIn.Properties.VariableNames,"OPCN3"))>0))
        contourOut = {...
            'bin0',...
            'bin1',...
            'bin2',...
            'bin3',...
            'bin4',...
            'bin5',...
            'bin6',...
            'bin7',...
            'bin8',...
            'bin9',...
            'bin10',...
            'bin11',...
            'bin12',...
            'bin13',...
            'bin14',...
            'bin15',...
            'bin16',...
            'bin17',...
            'bin18',...
            'bin19',...
            'bin20',...
            'bin21',...
            'bin22',...
            'bin23',...
            };
        
        binBoundriesHigh = [.46,.66,1,1.3,1.7,2.3,3.0,4.0,5.2,6.5,8,10,12,14,16,18,20,22,25,28,31,34,37,40];
        binBoundriesLow  = [0.35,.46,.66,1,1.3,1.7,2.3,3.0,4.0,5.2,6.5,8,10,12,14,16,18,20,22,25,28,31,34,37];
        
    else
        valid = false;
        return;
    end
    
    figure_1= figure('Tag','Contour_Plot',...
        'NumberTitle','off',...
        'units','pixels','OuterPosition',[0 0 900 675],...
        'Name','TimeSeries',...
        'Visible','off'...
        );
    
    binCentersPre        = (binBoundriesHigh+binBoundriesLow)./2;
    
    for n =1:length(binBoundriesHigh)
        binCenters(n) = string(sprintf('%0.2f',binCentersPre(1,n)));
    end
    
    timeIn = datenum(dataIn.dateTime);
    calibratedTable = timetable2table(dataIn);
    calibratedArray = calibratedTable(:,contourOut);
    
    contourf(timeIn,[1:16],table2array(calibratedArray)',50,'LineStyle', 'None');
    yticks([1:1:16]);
    yticklabels(string(binCenters));
    datetick('x','mmm/yyyy','keeplimits');
    ylabel(yLabel,'FontWeight','bold','FontSize',10);
    xlabel(xLabel,'FontWeight','bold','FontSize',10);
    
    Top_Title=strcat(titleIn);
    Bottom_Title = strcat("Node " +string(nodeID));
    title({" ";Top_Title;Bottom_Title},'FontWeight','bold');
    
    
    colormap(jet) ;map2 = colormap; map2(1,:) = 1; colormap(map2);
    c = colorbar;
    c.Label.String = 'log_{10} (Particle Counts)';
    
    folderCheck(figName);
    saveas(figure_1,char(figName));
    valid =  true ;
end
valid = false;
end
