function [] = dailyUpdate(nodeIndex,daysBack)

display(newline)
% display("---------------------MINTS---------------------")

addpath("../../../functions/")

addpath("../../../YAMLMatlab_0.4.3")

yamlFile =  '../mintsDefinitionsV2.yaml';

mintsDefinitions   = ReadYaml(yamlFile);

nodeIDs            = mintsDefinitions.nodeIDs;
dataFolder         = mintsDefinitions.dataFolder;

rawFolder          =  dataFolder + "/raw";
rawMatsFolder      =  dataFolder + "/rawMats";
updateFolder       =  dataFolder + "/liveUpdate/UTDNodes";
modelsFolder       =  dataFolder + "/modelsMats/UTDNodes/";

timeSpan           =  seconds(mintsDefinitions.timeSpan);
nodeID             =  nodeIDs{nodeIndex}.nodeID;
resultsFile        = modelsFolder+ "WSInitialV2.csv";

display(newline);
display("Data Folder Located      @ :"+ dataFolder);
display("Raw Data Located         @ :"+ rawFolder );
display("Raw DotMat Data Located  @ :"+ rawMatsFolder);
display("Update Data Located      @ :"+ updateFolder);
stringIn = "Daily";

dataFolder          = mintsDefinitions.dataFolder;
nodeIDs             = mintsDefinitions.nodeIDs;
timeSpan            = seconds(mintsDefinitions.timeSpan);
binsPerColumn       = mintsDefinitions.binsPerColumn;
numberPerBin        = mintsDefinitions.numberPerBin ;
pValid              = mintsDefinitions.pValid;
airmarID            = mintsDefinitions.airmarID;
instruments         = mintsDefinitions.instruments;
units               = mintsDefinitions.units;
poolWorkers         = mintsDefinitions.poolWorkers;

targets      = mintsDefinitions.targets;
targetLabels = mintsDefinitions.targetLabels;
units        = mintsDefinitions.units;
limitsLow    = mintsDefinitions.limitsLow;
limitsHigh   = mintsDefinitions.limitsHigh;
instruments   = mintsDefinitions.instruments;

climateTargets      = mintsDefinitions.climateTargets;
climateTargetLabels = mintsDefinitions.climateTargetLabels;
climateUnits        = mintsDefinitions.climateUnits;
climateInstrument   = mintsDefinitions.climateInstrument;
climateLimitsLow    = mintsDefinitions.climateLimitsLow;
climateLimitsHigh   = mintsDefinitions.climateLimitsHigh;

display("Getting Historic Update for Node: "+ nodeID);
display("Currrent Time is "+ datestr(datetime('now')));
display("---------------------MINTS---------------------")

versionStrPreDaily = 'UTD_V2_Daily_';
versionStrDaily    = [versionStrPreDaily datestr(now,'yyyy_mm_dd_HH_MM_SS')];

dataDate= datetime('today','timezone','utc') - days(daysBack);

todaysNodeFolder   = strcat("/*/*/",...
    num2str(year(currentDate),'%04d'),"/",...
    num2str(month(currentDate),'%02d'),"/",...
    num2str(day(currentDate),'%02d'),"/MINTS_")  

%% Loading from previiously Saved Data files
loadName = strcat(rawMatsFolder,"/UTDNodes/Mints_UTD_Node_",nodeID,"_30Sec.mat");
load(loadName)
%%



mintsDataUTD = nodeFixes(nodeID,mintsDataUTD,rawMatsFolder);

%% Choosing Input Stack
eval(strcat("climateInputs        = mintsDefinitions.climateStack_",nodeIDs{nodeIndex}.climateStack,";"));
eval(strcat("climateInputsCalib   = mintsDefinitions.climateInputsCalib_",nodeIDs{nodeIndex}.climateStack,";"));
eval(strcat("climateInputLabels   = mintsDefinitions.climateStackLabels_",nodeIDs{nodeIndex}.climateStack,";"));

eval(strcat("pmInputs             = mintsDefinitions.pmStack_",string(nodeIDs{nodeIndex}.pmStack),";"));
eval(strcat("pmInputsCorrected    = mintsDefinitions.pmInputsCorrected_",string(nodeIDs{nodeIndex}.pmStack),";"));
eval(strcat("pmInputLabels        = mintsDefinitions.pmStackLabels_",string(nodeIDs{nodeIndex}.pmStack),";"))
eval(strcat("pmAppends            = mintsDefinitions.pmAppends_",string(nodeIDs{nodeIndex}.pmStack),";"));
eval(strcat("pmAppendsCalib       = mintsDefinitions.pmAppendsCalib_",string(nodeIDs{nodeIndex}.pmStack),";"));

eval(strcat("sensorStack          = mintsDefinitions.sensorStack_",string(nodeIDs{nodeIndex}.pmStack),";"));

%% Defining Inputs
inCorrected  = correctionsUTDV2(mintsDataUTD);

% At this point I can load in the best model file
display("Loading Best Models")
[bestModels,bestModelsLabels,climateParamsNow] = readResultsNowV2(...
                        resultsFile,nodeID,targets,modelsFolder);

display("Climate Bounding")

% Global Bounds 
inCorrected = checkBounds(inCorrected,nodeID,versionStrHistoric,modelsFolder,"completeBounds");
% Training Bounds 
inCorrected = boundCorrections(inCorrected,climateParamsNow);


%% Loading the appropriate models
% At this point new the best models are loaded

inCorrected.temperatureCalib = polyval(bestModels{1},...
    inCorrected.BME280_temperatureK) ;
inCorrected.pressureCalib    = polyval(bestModels{2},...
    inCorrected.BME280_pressureLog) ;
inCorrected.humidityCalib    = polyval(bestModels{3},...
    inCorrected.BME280_humidity) ;

pmInputsCombined             = [pmInputsCorrected,pmAppendsCalib];

[rows, columns] = find(isnan(table2array(inCorrected(:,pmInputsCombined))));

inCorrected(unique(rows),:) = [];



%% Dew Point Results
inDewPoint = table2array(inCorrected(:,climateInputsCalib));

inCorrected.dewPoint_predicted=predict(bestModels{4},inDewPoint);

inPM       = table2array(inCorrected(:,pmInputsCombined));

% Pm Models are coming after 5 
for n = 5: length(bestModels)
    display("Predicting " + targets{n})
    eval(strcat("inCorrected.",targets{n},"_predicted= " , "predict(bestModels{n},inPM);"));
end



%% Applying Corrections
inCorrected =  correctionsPM(inCorrected);

inCorrected.temperatureOut = inCorrected.temperatureCalib;
inCorrected.pressureOut    = 10.^(inCorrected.pressureCalib);
inCorrected.humidityOut    = inCorrected.humidityCalib;
inCorrected.dewPointOut    = inCorrected.dewPoint_predicted;

    num2str(year(currentDate),'%04d'),"/",...
    num2str(month(currentDate),'%02d'),"/",...
    num2str(day(currentDate),'%02d')

preFigName  =  strcat(updateFolder,"/",nodeID,"/", ...
    num2str(year(currentDate),'%04d'),"/",...
    num2str(month(currentDate),'%02d'),"/",...
    num2str(day(currentDate),'%02d')"/Mints_,...


"+nodeID;_

%% Climate Graphs 
drawSummary1x(...
    inCorrected.dateTime,inCorrected.temperatureOut,...,...
    nodeID,...
    "Date Time (UTC)",...
    "Atmospheric Temperature (K)",...
    strcat("Atmospheric Temperature - ",strrep(string(bestModelsLabels.versionStr(1)),"_","-")),...
    "Atmospheric Temperature Time Series",...
     updateFolder+"/"+nodeID+"/Mints_"+nodeID+"_Temperature.png",...
    true,...
    0,100)

drawSummary1x(...
    inCorrected.dateTime,inCorrected.pressureOut,...,...
    nodeID,...
    "Date Time (UTC)",...
    "Atmospheric Pressure (mili Bar)",...
    strcat("Atmospheric Pressure: ",strrep(string(bestModelsLabels.versionStr(2)),"_","-")),...
    "Atmospheric Pressure Time Series",...
     updateFolder+"/"+nodeID+"/Mints_"+nodeID+"_Pressure.png",...
    true,...
    975,1010)


drawSummary1x(...
    inCorrected.dateTime,inCorrected.humidityOut,...,...
    nodeID,...
    "Date Time (UTC)",...
    "Atmospheric Humidity (%)",...
    strcat("Atmospheric Humidity: ",strrep(string(bestModelsLabels.versionStr(3)),"_","-")),...
    "Atmospheric Humidity Time Series",...
     updateFolder+"/"+nodeID+"/Mints_"+nodeID+"_Humidity.png",...
    true,...
    0,100)

drawSummary1x(...
    inCorrected.dateTime,inCorrected.dewPoint_predicted,...,...
    nodeID,...
    "Date Time (UTC)",...
    "Dew Point (K)",...
    strcat("Dew Point: ",strrep(string(bestModelsLabels.versionStr(4)),"_","-")),...
    "Dew Point Time Series",...
     updateFolder+"/"+nodeID+"/Mints_"+nodeID+"_DewPoint.png",...
    true,...
    -20,100)

%% Pm Graphs 

drawSummary1x(...
    inCorrected.dateTime,inCorrected.pm1_palas_predicted,...,...
    nodeID,...
    "Date Time (UTC)",...
    "PM_{1} (\mug/m^{3})",...
    strcat("PM_{1}: ",strrep(string(bestModelsLabels.versionStr(5)),"_","-")),...
    "PM_{1} Time Series",...
     updateFolder+"/"+nodeID+"/Mints_"+nodeID+"_PM1.png",...
    true,...
    0,40)

drawSummary1x(...
    inCorrected.dateTime,inCorrected.pm2_5_palas_predicted,...,...
    nodeID,...
    "Date Time (UTC)",...
    "PM_{2.5} (\mug/m^{3})",...
    strcat("PM_{2.5}: ",strrep(string(bestModelsLabels.versionStr(6)),"_","-")),...
    "PM_{2.5} Time Series",...
     updateFolder+"/"+nodeID+"/Mints_"+nodeID+"_PM2_5.png",...
    true,...
    0,50)

drawSummary1x(...
    inCorrected.dateTime,inCorrected.pm4_palas_predicted,...,...
    nodeID,...
    "Date Time (UTC)",...
    "PM_{4} (\mug/m^{3})",...
    strcat("PM_{4}: ",strrep(string(bestModelsLabels.versionStr(7)),"_","-")),...
    "PM_{4} Time Series",...
     updateFolder+"/"+nodeID+"/Mints_"+nodeID+"_PM4.png",...
    true,...
    0,60)
drawSummary1x(...
    inCorrected.dateTime,inCorrected.pm10_palas_predicted,...,...
    nodeID,...
    "Date Time (UTC)",...
    "PM_{10} (\mug/m^{3})",...
    strcat("PM_{10}: ",strrep(string(bestModelsLabels.versionStr(8)),"_","-")),...
    "PM_{10} Time Series",...
     updateFolder+"/"+nodeID+"/Mints_"+nodeID+"_PM10.png",...
    true,...
    0,100)

drawSummary3x(...
    inCorrected.dateTime,inCorrected.pm1_palas_predicted,...
    inCorrected.dateTime,inCorrected.pm2_5_palas_predicted,...
    inCorrected.dateTime,inCorrected.pm10_palas_predicted,...
       strcat("PM_{1}  : ",strrep(string(bestModelsLabels.versionStr(5)),"_","-")),...
         strcat("PM_{2.5}: ",strrep(string(bestModelsLabels.versionStr(6)),"_","-")),...
          strcat("PM_{10} :  ",strrep(string(bestModelsLabels.versionStr(7)),"_","-")),...
            nodeID,"Date Time (UTC)","PM (\mug/m^{3})",... 
              75,...
               "Particulate Matter Summary Plot",...
                preFigName +"_PMSummary.png")


%% UNCOMMENT ON EUROPA
% contourOPCSummary(...
%     inCorrected,...
%     nodeID,...
%     "Date Time (UTC)",...
%      "Particle Counts",...
%      "Contour Plot for Binned Particle Counts", preFigName +"_Countour.png")
% 
% display(" ");

end

%% 5a61 : Aug 2021, Oct 10 - Now
%% 5a12 : Sep - Oct 10 @ Joppa

